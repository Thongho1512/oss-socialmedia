{"timestamp":"2025-07-02T10:57:36.139+0700","level":"INFO","thread":"restartedMain","logger":"com.oss.socialmedia.SocialmediaApplication","message":"Starting SocialmediaApplication using Java 21.0.7 with PID 13209 (/home/thongho/Documents/proJAVA/oss-socialmedia/backend-socialmedia/target/classes started by thongho in /home/thongho/Documents/proJAVA/oss-socialmedia/backend-socialmedia)","context":""}
{"timestamp":"2025-07-02T10:57:36.195+0700","level":"INFO","thread":"restartedMain","logger":"com.oss.socialmedia.SocialmediaApplication","message":"The following 1 profile is active: \"dev\"","context":""}
{"timestamp":"2025-07-02T10:57:36.433+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","context":""}
{"timestamp":"2025-07-02T10:57:39.383+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","context":""}
{"timestamp":"2025-07-02T10:57:39.550+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 156 ms. Found 9 MongoDB repository interfaces.","context":""}
{"timestamp":"2025-07-02T10:57:40.890+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port 8080 (http)","context":""}
{"timestamp":"2025-07-02T10:57:40.917+0700","level":"INFO","thread":"restartedMain","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]","context":""}
{"timestamp":"2025-07-02T10:57:40.919+0700","level":"INFO","thread":"restartedMain","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/10.1.34]","context":""}
{"timestamp":"2025-07-02T10:57:41.046+0700","level":"INFO","thread":"restartedMain","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext","context":""}
{"timestamp":"2025-07-02T10:57:41.049+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 4613 ms","context":""}
{"timestamp":"2025-07-02T10:57:41.673+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.filter.ServerHttpObservationFilter","message":"Filter 'webMvcObservationFilter' configured for use","context":""}
{"timestamp":"2025-07-02T10:57:42.151+0700","level":"INFO","thread":"restartedMain","logger":"org.mongodb.driver.client","message":"MongoClient with metadata {\"driver\": {\"name\": \"mongo-java-driver|sync|spring-boot\", \"version\": \"5.2.1\"}, \"os\": {\"type\": \"Linux\", \"name\": \"Linux\", \"architecture\": \"amd64\", \"version\": \"6.8.0-60-generic\"}, \"platform\": \"Java/Oracle Corporation/21.0.7+8-LTS-245\"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@1067f2d1], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@69c5f17, com.mongodb.Jep395RecordCodecProvider@27c8c478, com.mongodb.KotlinCodecProvider@4057e021]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27018], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@6f897380], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}","context":""}
{"timestamp":"2025-07-02T10:57:42.289+0700","level":"INFO","thread":"cluster-ClusterId{value='6864ae359066d73b8bf29d31', description='null'}-localhost:27018","logger":"org.mongodb.driver.cluster","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:27018, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=83009699, minRoundTripTimeNanos=0}","context":""}
{"timestamp":"2025-07-02T10:57:42.656+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","message":"LiveReload server is running on port 35729","context":""}
{"timestamp":"2025-07-02T10:57:44.791+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","message":"Global AuthenticationManager configured with UserDetailsService bean with name userDetailsService","context":""}
{"timestamp":"2025-07-02T10:57:45.022+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.server.support.WebSocketHandlerMapping","message":"Patterns [/ws/**] in 'stompWebSocketHandlerMapping'","context":""}
{"timestamp":"2025-07-02T10:57:45.408+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"56 mappings in 'requestMappingHandlerMapping'","context":""}
{"timestamp":"2025-07-02T10:57:45.645+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /upload/images/**, /upload/videos/**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'","context":""}
{"timestamp":"2025-07-02T10:57:46.225+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","message":"Exposing 15 endpoints beneath base path '/actuator'","context":""}
{"timestamp":"2025-07-02T10:57:46.643+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.AuthController:\n\t","context":""}
{"timestamp":"2025-07-02T10:57:46.644+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.CommentController:\n\t","context":""}
{"timestamp":"2025-07-02T10:57:46.645+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.EmailController:\n\t","context":""}
{"timestamp":"2025-07-02T10:57:46.645+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.FollowController:\n\t","context":""}
{"timestamp":"2025-07-02T10:57:46.646+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.LikeController:\n\t","context":""}
{"timestamp":"2025-07-02T10:57:46.647+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.MessageController:\n\t","context":""}
{"timestamp":"2025-07-02T10:57:46.648+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.MockupUserController:\n\t","context":""}
{"timestamp":"2025-07-02T10:57:46.650+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.PermissionController:\n\t","context":""}
{"timestamp":"2025-07-02T10:57:46.653+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.PostController:\n\t","context":""}
{"timestamp":"2025-07-02T10:57:46.654+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.RoleController:\n\t","context":""}
{"timestamp":"2025-07-02T10:57:46.655+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.ShareController:\n\t","context":""}
{"timestamp":"2025-07-02T10:57:46.659+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.UserController:\n\t","context":""}
{"timestamp":"2025-07-02T10:57:46.660+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.UserHomePageController:\n\t","context":""}
{"timestamp":"2025-07-02T10:57:46.671+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.w.WebSocketChatHandler:\n\t{[MESSAGE],[/chat.sendMessage]}: sendMessage(MessageEntity)","context":""}
{"timestamp":"2025-07-02T10:57:46.676+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.b.a.w.s.e.BasicErrorController:\n\t","context":""}
{"timestamp":"2025-07-02T10:57:46.678+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.w.a.MultipleOpenApiWebMvcResource:\n\t","context":""}
{"timestamp":"2025-07-02T10:57:46.679+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.w.a.OpenApiWebMvcResource:\n\t","context":""}
{"timestamp":"2025-07-02T10:57:46.680+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.w.u.SwaggerWelcomeWebMvc:\n\t","context":""}
{"timestamp":"2025-07-02T10:57:46.681+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.w.u.SwaggerConfigResource:\n\t","context":""}
{"timestamp":"2025-07-02T10:57:46.840+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice","context":""}
{"timestamp":"2025-07-02T10:57:46.939+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice","context":""}
{"timestamp":"2025-07-02T10:57:47.573+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/actuator/**'], Ant [pattern='/actuator/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T10:57:47.575+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/v3/**'], Ant [pattern='/v3/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T10:57:47.576+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/webjars/**'], Ant [pattern='/webjars/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T10:57:47.582+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/swagger-ui/**'], Ant [pattern='/swagger-ui/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T10:57:47.582+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/swagger-ui.html'], Ant [pattern='/swagger-ui.html']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T10:57:47.585+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/v3/api-docs/**'], Ant [pattern='/v3/api-docs/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T10:57:47.586+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/upload/**'], Ant [pattern='/upload/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T10:57:47.755+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]","context":""}
{"timestamp":"2025-07-02T10:57:47.757+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]","context":""}
{"timestamp":"2025-07-02T10:57:47.758+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"Starting...","context":""}
{"timestamp":"2025-07-02T10:57:47.760+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@87eed9b]","context":""}
{"timestamp":"2025-07-02T10:57:47.761+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"brokerChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@87eed9b]","context":""}
{"timestamp":"2025-07-02T10:57:47.764+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@87eed9b]]","context":""}
{"timestamp":"2025-07-02T10:57:47.765+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"Started.","context":""}
{"timestamp":"2025-07-02T10:57:47.767+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]","context":""}
{"timestamp":"2025-07-02T10:57:47.769+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]","context":""}
{"timestamp":"2025-07-02T10:57:47.819+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat started on port 8080 (http) with context path '/'","context":""}
{"timestamp":"2025-07-02T10:57:47.886+0700","level":"INFO","thread":"restartedMain","logger":"com.oss.socialmedia.SocialmediaApplication","message":"Started SocialmediaApplication in 13.455 seconds (process running for 14.037)","context":""}
{"timestamp":"2025-07-02T10:58:38.671+0700","level":"INFO","thread":"cluster-ClusterId{value='6864ae359066d73b8bf29d31', description='null'}-localhost:27018","logger":"org.mongodb.driver.cluster","message":"Exception in monitor thread while connecting to server localhost:27018","context":""}
{"timestamp":"2025-07-02T10:58:47.706+0700","level":"INFO","thread":"MessageBroker-1","logger":"org.springframework.web.socket.config.WebSocketMessageBrokerStats","message":"WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]","context":""}
{"timestamp":"2025-07-02T10:58:48.685+0700","level":"INFO","thread":"cluster-ClusterId{value='6864ae359066d73b8bf29d31', description='null'}-localhost:27018","logger":"org.mongodb.driver.cluster","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:27018, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4760197, minRoundTripTimeNanos=0}","context":""}
{"timestamp":"2025-07-02T11:19:02.615+0700","level":"INFO","thread":"http-nio-8080-exec-1","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","context":""}
{"timestamp":"2025-07-02T11:19:02.615+0700","level":"INFO","thread":"http-nio-8080-exec-1","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Initializing Servlet 'dispatcherServlet'","context":""}
{"timestamp":"2025-07-02T11:19:02.616+0700","level":"DEBUG","thread":"http-nio-8080-exec-1","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected StandardServletMultipartResolver","context":""}
{"timestamp":"2025-07-02T11:19:02.616+0700","level":"DEBUG","thread":"http-nio-8080-exec-1","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected AcceptHeaderLocaleResolver","context":""}
{"timestamp":"2025-07-02T11:19:02.617+0700","level":"DEBUG","thread":"http-nio-8080-exec-1","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected FixedThemeResolver","context":""}
{"timestamp":"2025-07-02T11:19:02.619+0700","level":"DEBUG","thread":"http-nio-8080-exec-1","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@15b46aa9","context":""}
{"timestamp":"2025-07-02T11:19:02.620+0700","level":"DEBUG","thread":"http-nio-8080-exec-1","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected org.springframework.web.servlet.support.SessionFlashMapManager@7aba4bc3","context":""}
{"timestamp":"2025-07-02T11:19:02.621+0700","level":"DEBUG","thread":"http-nio-8080-exec-1","logger":"org.springframework.web.servlet.DispatcherServlet","message":"enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data","context":""}
{"timestamp":"2025-07-02T11:19:02.621+0700","level":"INFO","thread":"http-nio-8080-exec-1","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Completed initialization in 5 ms","context":""}
{"timestamp":"2025-07-02T11:19:02.675+0700","level":"DEBUG","thread":"http-nio-8080-exec-1","logger":"org.springframework.web.servlet.DispatcherServlet","message":"GET \"/\", parameters={}","context":""}
{"timestamp":"2025-07-02T11:19:02.680+0700","level":"DEBUG","thread":"http-nio-8080-exec-1","logger":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]","context":""}
{"timestamp":"2025-07-02T11:19:02.681+0700","level":"DEBUG","thread":"http-nio-8080-exec-1","logger":"org.springframework.web.servlet.resource.ResourceHttpRequestHandler","message":"Resource not found","context":""}
{"timestamp":"2025-07-02T11:19:02.689+0700","level":"DEBUG","thread":"http-nio-8080-exec-1","logger":"org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver","message":"Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .]","context":""}
{"timestamp":"2025-07-02T11:19:02.690+0700","level":"DEBUG","thread":"http-nio-8080-exec-1","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Completed 404 NOT_FOUND","context":""}
{"timestamp":"2025-07-02T11:28:47.711+0700","level":"INFO","thread":"MessageBroker-1","logger":"org.springframework.web.socket.config.WebSocketMessageBrokerStats","message":"WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]","context":""}
{"timestamp":"2025-07-02T11:58:47.713+0700","level":"INFO","thread":"MessageBroker-2","logger":"org.springframework.web.socket.config.WebSocketMessageBrokerStats","message":"WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 0, completed tasks = 2]","context":""}
{"timestamp":"2025-07-02T12:28:47.718+0700","level":"INFO","thread":"MessageBroker-1","logger":"org.springframework.web.socket.config.WebSocketMessageBrokerStats","message":"WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 3]","context":""}
{"timestamp":"2025-07-02T12:58:47.720+0700","level":"INFO","thread":"MessageBroker-3","logger":"org.springframework.web.socket.config.WebSocketMessageBrokerStats","message":"WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 5, active threads = 1, queued tasks = 0, completed tasks = 4]","context":""}
{"timestamp":"2025-07-02T13:28:47.722+0700","level":"INFO","thread":"MessageBroker-2","logger":"org.springframework.web.socket.config.WebSocketMessageBrokerStats","message":"WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 0, completed tasks = 5]","context":""}
{"timestamp":"2025-07-02T13:58:47.723+0700","level":"INFO","thread":"MessageBroker-4","logger":"org.springframework.web.socket.config.WebSocketMessageBrokerStats","message":"WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 7, active threads = 1, queued tasks = 0, completed tasks = 6]","context":""}
{"timestamp":"2025-07-02T14:27:42.405+0700","level":"INFO","thread":"SpringApplicationShutdownHook","logger":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","message":"Commencing graceful shutdown. Waiting for active requests to complete","context":""}
{"timestamp":"2025-07-02T14:27:42.410+0700","level":"INFO","thread":"tomcat-shutdown","logger":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","message":"Graceful shutdown complete","context":""}
{"timestamp":"2025-07-02T14:27:42.416+0700","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientOutboundChannel removed SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]","context":""}
{"timestamp":"2025-07-02T14:27:42.417+0700","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel removed WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]","context":""}
{"timestamp":"2025-07-02T14:27:42.417+0700","level":"INFO","thread":"SpringApplicationShutdownHook","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"Stopping...","context":""}
{"timestamp":"2025-07-02T14:27:42.417+0700","level":"INFO","thread":"SpringApplicationShutdownHook","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@87eed9b]]","context":""}
{"timestamp":"2025-07-02T14:27:42.418+0700","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@87eed9b]","context":""}
{"timestamp":"2025-07-02T14:27:42.418+0700","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"brokerChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@87eed9b]","context":""}
{"timestamp":"2025-07-02T14:27:42.419+0700","level":"INFO","thread":"SpringApplicationShutdownHook","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"Stopped.","context":""}
{"timestamp":"2025-07-02T14:27:42.419+0700","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]","context":""}
{"timestamp":"2025-07-02T14:27:42.420+0700","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"brokerChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]","context":""}
{"timestamp":"2025-07-02T14:32:49.820+0700","level":"INFO","thread":"restartedMain","logger":"com.oss.socialmedia.SocialmediaApplication","message":"Starting SocialmediaApplication using Java 21.0.7 with PID 188415 (/home/thongho/Documents/proJAVA/oss-socialmedia/backend-socialmedia/target/classes started by thongho in /home/thongho/Documents/proJAVA/oss-socialmedia/backend-socialmedia)","context":""}
{"timestamp":"2025-07-02T14:32:49.832+0700","level":"INFO","thread":"restartedMain","logger":"com.oss.socialmedia.SocialmediaApplication","message":"The following 1 profile is active: \"dev\"","context":""}
{"timestamp":"2025-07-02T14:32:49.891+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","context":""}
{"timestamp":"2025-07-02T14:32:51.422+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","context":""}
{"timestamp":"2025-07-02T14:32:51.530+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 99 ms. Found 9 MongoDB repository interfaces.","context":""}
{"timestamp":"2025-07-02T14:32:52.170+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port 8080 (http)","context":""}
{"timestamp":"2025-07-02T14:32:52.189+0700","level":"INFO","thread":"restartedMain","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]","context":""}
{"timestamp":"2025-07-02T14:32:52.190+0700","level":"INFO","thread":"restartedMain","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/10.1.34]","context":""}
{"timestamp":"2025-07-02T14:32:52.244+0700","level":"INFO","thread":"restartedMain","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext","context":""}
{"timestamp":"2025-07-02T14:32:52.245+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 2353 ms","context":""}
{"timestamp":"2025-07-02T14:32:52.525+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.filter.ServerHttpObservationFilter","message":"Filter 'webMvcObservationFilter' configured for use","context":""}
{"timestamp":"2025-07-02T14:32:52.763+0700","level":"INFO","thread":"restartedMain","logger":"org.mongodb.driver.client","message":"MongoClient with metadata {\"driver\": {\"name\": \"mongo-java-driver|sync|spring-boot\", \"version\": \"5.2.1\"}, \"os\": {\"type\": \"Linux\", \"name\": \"Linux\", \"architecture\": \"amd64\", \"version\": \"6.8.0-60-generic\"}, \"platform\": \"Java/Oracle Corporation/21.0.7+8-LTS-245\"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@251c1385], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@241be1e5, com.mongodb.Jep395RecordCodecProvider@4c2ffc9b, com.mongodb.KotlinCodecProvider@3b6ea497]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27018], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@7eab0844], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}","context":""}
{"timestamp":"2025-07-02T14:32:52.792+0700","level":"INFO","thread":"cluster-ClusterId{value='6864e0a440ef20483064b637', description='null'}-localhost:27018","logger":"org.mongodb.driver.cluster","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:27018, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=25239175, minRoundTripTimeNanos=0}","context":""}
{"timestamp":"2025-07-02T14:32:52.946+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","message":"LiveReload server is running on port 35729","context":""}
{"timestamp":"2025-07-02T14:32:54.146+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","message":"Global AuthenticationManager configured with UserDetailsService bean with name userDetailsService","context":""}
{"timestamp":"2025-07-02T14:32:54.264+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.server.support.WebSocketHandlerMapping","message":"Patterns [/ws/**] in 'stompWebSocketHandlerMapping'","context":""}
{"timestamp":"2025-07-02T14:32:54.408+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"56 mappings in 'requestMappingHandlerMapping'","context":""}
{"timestamp":"2025-07-02T14:32:54.487+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /upload/images/**, /upload/videos/**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'","context":""}
{"timestamp":"2025-07-02T14:32:54.718+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","message":"Exposing 15 endpoints beneath base path '/actuator'","context":""}
{"timestamp":"2025-07-02T14:32:54.903+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.AuthController:\n\t","context":""}
{"timestamp":"2025-07-02T14:32:54.904+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.CommentController:\n\t","context":""}
{"timestamp":"2025-07-02T14:32:54.905+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.EmailController:\n\t","context":""}
{"timestamp":"2025-07-02T14:32:54.905+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.FollowController:\n\t","context":""}
{"timestamp":"2025-07-02T14:32:54.906+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.LikeController:\n\t","context":""}
{"timestamp":"2025-07-02T14:32:54.907+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.MessageController:\n\t","context":""}
{"timestamp":"2025-07-02T14:32:54.907+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.MockupUserController:\n\t","context":""}
{"timestamp":"2025-07-02T14:32:54.908+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.PermissionController:\n\t","context":""}
{"timestamp":"2025-07-02T14:32:54.908+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.PostController:\n\t","context":""}
{"timestamp":"2025-07-02T14:32:54.909+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.RoleController:\n\t","context":""}
{"timestamp":"2025-07-02T14:32:54.910+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.ShareController:\n\t","context":""}
{"timestamp":"2025-07-02T14:32:54.910+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.UserController:\n\t","context":""}
{"timestamp":"2025-07-02T14:32:54.911+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.UserHomePageController:\n\t","context":""}
{"timestamp":"2025-07-02T14:32:54.916+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.w.WebSocketChatHandler:\n\t{[MESSAGE],[/chat.sendMessage]}: sendMessage(MessageEntity)","context":""}
{"timestamp":"2025-07-02T14:32:54.918+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.b.a.w.s.e.BasicErrorController:\n\t","context":""}
{"timestamp":"2025-07-02T14:32:54.919+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.w.a.MultipleOpenApiWebMvcResource:\n\t","context":""}
{"timestamp":"2025-07-02T14:32:54.920+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.w.a.OpenApiWebMvcResource:\n\t","context":""}
{"timestamp":"2025-07-02T14:32:54.921+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.w.u.SwaggerWelcomeWebMvc:\n\t","context":""}
{"timestamp":"2025-07-02T14:32:54.922+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.w.u.SwaggerConfigResource:\n\t","context":""}
{"timestamp":"2025-07-02T14:32:55.005+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice","context":""}
{"timestamp":"2025-07-02T14:32:55.070+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice","context":""}
{"timestamp":"2025-07-02T14:32:55.421+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/actuator/**'], Ant [pattern='/actuator/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T14:32:55.421+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/v3/**'], Ant [pattern='/v3/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T14:32:55.422+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/webjars/**'], Ant [pattern='/webjars/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T14:32:55.422+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/swagger-ui/**'], Ant [pattern='/swagger-ui/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T14:32:55.422+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/swagger-ui.html'], Ant [pattern='/swagger-ui.html']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T14:32:55.423+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/v3/api-docs/**'], Ant [pattern='/v3/api-docs/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T14:32:55.423+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/upload/**'], Ant [pattern='/upload/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T14:32:55.514+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]","context":""}
{"timestamp":"2025-07-02T14:32:55.515+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]","context":""}
{"timestamp":"2025-07-02T14:32:55.516+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"Starting...","context":""}
{"timestamp":"2025-07-02T14:32:55.517+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@2442d7ce]","context":""}
{"timestamp":"2025-07-02T14:32:55.517+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"brokerChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@2442d7ce]","context":""}
{"timestamp":"2025-07-02T14:32:55.518+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@2442d7ce]]","context":""}
{"timestamp":"2025-07-02T14:32:55.519+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"Started.","context":""}
{"timestamp":"2025-07-02T14:32:55.520+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]","context":""}
{"timestamp":"2025-07-02T14:32:55.520+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]","context":""}
{"timestamp":"2025-07-02T14:32:55.538+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat started on port 8080 (http) with context path '/'","context":""}
{"timestamp":"2025-07-02T14:32:55.565+0700","level":"INFO","thread":"restartedMain","logger":"com.oss.socialmedia.SocialmediaApplication","message":"Started SocialmediaApplication in 6.586 seconds (process running for 7.21)","context":""}
{"timestamp":"2025-07-02T14:33:36.453+0700","level":"INFO","thread":"http-nio-8080-exec-2","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","context":""}
{"timestamp":"2025-07-02T14:33:36.454+0700","level":"INFO","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Initializing Servlet 'dispatcherServlet'","context":""}
{"timestamp":"2025-07-02T14:33:36.455+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected StandardServletMultipartResolver","context":""}
{"timestamp":"2025-07-02T14:33:36.455+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected AcceptHeaderLocaleResolver","context":""}
{"timestamp":"2025-07-02T14:33:36.456+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected FixedThemeResolver","context":""}
{"timestamp":"2025-07-02T14:33:36.459+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1814373c","context":""}
{"timestamp":"2025-07-02T14:33:36.460+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected org.springframework.web.servlet.support.SessionFlashMapManager@5624e00c","context":""}
{"timestamp":"2025-07-02T14:33:36.461+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data","context":""}
{"timestamp":"2025-07-02T14:33:36.462+0700","level":"INFO","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Completed initialization in 8 ms","context":""}
{"timestamp":"2025-07-02T14:33:36.525+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"POST \"/api/v1/auth/login\", parameters={}","context":""}
{"timestamp":"2025-07-02T14:33:36.528+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"Mapped to com.oss.socialmedia.controller.AuthController#login(ReqLoginDTO)","context":""}
{"timestamp":"2025-07-02T14:33:36.593+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","message":"Read \"application/json;charset=UTF-8\" to [com.oss.socialmedia.controller.request.ReqLoginDTO@109daf7d]","context":""}
{"timestamp":"2025-07-02T14:33:36.601+0700","level":"INFO","thread":"http-nio-8080-exec-2","logger":"AUTH-CONTROLLER","message":"LOGIN: com.oss.socialmedia.controller.request.ReqLoginDTO@109daf7d","context":""}
{"timestamp":"2025-07-02T14:33:36.984+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"Using @ExceptionHandler com.oss.socialmedia.exception.GlobalException#handleIdException(Exception)","context":""}
{"timestamp":"2025-07-02T14:33:37.007+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","context":""}
{"timestamp":"2025-07-02T14:33:37.009+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Writing [com.oss.socialmedia.controller.response.RestResponse@622d6bac]","context":""}
{"timestamp":"2025-07-02T14:33:37.022+0700","level":"WARN","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"Resolved [org.springframework.security.authentication.BadCredentialsException: Bad credentials]","context":""}
{"timestamp":"2025-07-02T14:33:37.023+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Completed 400 BAD_REQUEST","context":""}
{"timestamp":"2025-07-02T14:33:55.501+0700","level":"INFO","thread":"MessageBroker-1","logger":"org.springframework.web.socket.config.WebSocketMessageBrokerStats","message":"WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]","context":""}
{"timestamp":"2025-07-02T14:39:23.876+0700","level":"DEBUG","thread":"http-nio-8080-exec-4","logger":"org.springframework.web.servlet.DispatcherServlet","message":"POST \"/api/v1/auth/register\", parameters={}","context":""}
{"timestamp":"2025-07-02T14:39:23.878+0700","level":"DEBUG","thread":"http-nio-8080-exec-4","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"Mapped to com.oss.socialmedia.controller.AuthController#register(ReqCreationUserDTO)","context":""}
{"timestamp":"2025-07-02T14:39:23.927+0700","level":"DEBUG","thread":"http-nio-8080-exec-4","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","message":"Read \"application/json;charset=UTF-8\" to [ReqCreationUserDTO(lastName=Thong, firstName=Ho, username=ThongHo, dob=2025-03-01T07:31:39.644Z, ema (truncated)...]","context":""}
{"timestamp":"2025-07-02T14:39:24.219+0700","level":"INFO","thread":"http-nio-8080-exec-4","logger":"USER-SERVICE","message":"Save register user: ReqCreationUserDTO(lastName=Thong, firstName=Ho, username=ThongHo, dob=2025-03-01T07:31:39.644Z, email=admin03@gmail.com, password=$2a$10$nX9S/SBD8Iw3wlgjhtcXyeuteefTg/8k4rXsRB/iQwzq/8VEeFr42, phoneNumber=string, gender=MALE, status=ACTIVE, roles=[6858bf26164257fa90c49e92])","context":""}
{"timestamp":"2025-07-02T14:39:24.343+0700","level":"DEBUG","thread":"http-nio-8080-exec-4","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","context":""}
{"timestamp":"2025-07-02T14:39:24.344+0700","level":"DEBUG","thread":"http-nio-8080-exec-4","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Writing [com.oss.socialmedia.controller.response.UserDTO@357e70f1]","context":""}
{"timestamp":"2025-07-02T14:39:24.349+0700","level":"WARN","thread":"http-nio-8080-exec-4","logger":"org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver","message":"Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Unimplemented method 'getUserName']","context":""}
{"timestamp":"2025-07-02T14:39:24.349+0700","level":"DEBUG","thread":"http-nio-8080-exec-4","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Completed 500 INTERNAL_SERVER_ERROR","context":""}
{"timestamp":"2025-07-02T14:51:01.684+0700","level":"INFO","thread":"SpringApplicationShutdownHook","logger":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","message":"Commencing graceful shutdown. Waiting for active requests to complete","context":""}
{"timestamp":"2025-07-02T14:51:01.697+0700","level":"INFO","thread":"tomcat-shutdown","logger":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","message":"Graceful shutdown complete","context":""}
{"timestamp":"2025-07-02T14:51:01.707+0700","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientOutboundChannel removed SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]","context":""}
{"timestamp":"2025-07-02T14:51:01.709+0700","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel removed WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]","context":""}
{"timestamp":"2025-07-02T14:51:01.714+0700","level":"INFO","thread":"SpringApplicationShutdownHook","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"Stopping...","context":""}
{"timestamp":"2025-07-02T14:51:01.717+0700","level":"INFO","thread":"SpringApplicationShutdownHook","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@2442d7ce]]","context":""}
{"timestamp":"2025-07-02T14:51:01.719+0700","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@2442d7ce]","context":""}
{"timestamp":"2025-07-02T14:51:01.720+0700","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"brokerChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@2442d7ce]","context":""}
{"timestamp":"2025-07-02T14:51:01.724+0700","level":"INFO","thread":"SpringApplicationShutdownHook","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"Stopped.","context":""}
{"timestamp":"2025-07-02T14:51:01.725+0700","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]","context":""}
{"timestamp":"2025-07-02T14:51:01.726+0700","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"brokerChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]","context":""}
{"timestamp":"2025-07-02T14:51:10.725+0700","level":"INFO","thread":"restartedMain","logger":"com.oss.socialmedia.SocialmediaApplication","message":"Starting SocialmediaApplication using Java 21.0.7 with PID 203465 (/home/thongho/Documents/proJAVA/oss-socialmedia/backend-socialmedia/target/classes started by thongho in /home/thongho/Documents/proJAVA/oss-socialmedia/backend-socialmedia)","context":""}
{"timestamp":"2025-07-02T14:51:10.737+0700","level":"INFO","thread":"restartedMain","logger":"com.oss.socialmedia.SocialmediaApplication","message":"The following 1 profile is active: \"dev\"","context":""}
{"timestamp":"2025-07-02T14:51:10.822+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","context":""}
{"timestamp":"2025-07-02T14:51:12.677+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","context":""}
{"timestamp":"2025-07-02T14:51:12.826+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 139 ms. Found 9 MongoDB repository interfaces.","context":""}
{"timestamp":"2025-07-02T14:51:13.745+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port 8080 (http)","context":""}
{"timestamp":"2025-07-02T14:51:13.769+0700","level":"INFO","thread":"restartedMain","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]","context":""}
{"timestamp":"2025-07-02T14:51:13.771+0700","level":"INFO","thread":"restartedMain","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/10.1.34]","context":""}
{"timestamp":"2025-07-02T14:51:13.841+0700","level":"INFO","thread":"restartedMain","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext","context":""}
{"timestamp":"2025-07-02T14:51:13.842+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 3019 ms","context":""}
{"timestamp":"2025-07-02T14:51:14.269+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.filter.ServerHttpObservationFilter","message":"Filter 'webMvcObservationFilter' configured for use","context":""}
{"timestamp":"2025-07-02T14:51:14.578+0700","level":"INFO","thread":"restartedMain","logger":"org.mongodb.driver.client","message":"MongoClient with metadata {\"driver\": {\"name\": \"mongo-java-driver|sync|spring-boot\", \"version\": \"5.2.1\"}, \"os\": {\"type\": \"Linux\", \"name\": \"Linux\", \"architecture\": \"amd64\", \"version\": \"6.8.0-60-generic\"}, \"platform\": \"Java/Oracle Corporation/21.0.7+8-LTS-245\"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@fe3906d], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@194d4992, com.mongodb.Jep395RecordCodecProvider@76010465, com.mongodb.KotlinCodecProvider@61b00420]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27018], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@72c39083], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}","context":""}
{"timestamp":"2025-07-02T14:51:14.615+0700","level":"INFO","thread":"cluster-ClusterId{value='6864e4f28b9bbe1cc2c14704', description='null'}-localhost:27018","logger":"org.mongodb.driver.cluster","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:27018, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=26628717, minRoundTripTimeNanos=0}","context":""}
{"timestamp":"2025-07-02T14:51:14.810+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","message":"LiveReload server is running on port 35729","context":""}
{"timestamp":"2025-07-02T14:51:16.006+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","message":"Global AuthenticationManager configured with UserDetailsService bean with name userDetailsService","context":""}
{"timestamp":"2025-07-02T14:51:16.143+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.server.support.WebSocketHandlerMapping","message":"Patterns [/ws/**] in 'stompWebSocketHandlerMapping'","context":""}
{"timestamp":"2025-07-02T14:51:16.334+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"56 mappings in 'requestMappingHandlerMapping'","context":""}
{"timestamp":"2025-07-02T14:51:16.455+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /upload/images/**, /upload/videos/**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'","context":""}
{"timestamp":"2025-07-02T14:51:16.732+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","message":"Exposing 15 endpoints beneath base path '/actuator'","context":""}
{"timestamp":"2025-07-02T14:51:16.925+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.AuthController:\n\t","context":""}
{"timestamp":"2025-07-02T14:51:16.926+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.CommentController:\n\t","context":""}
{"timestamp":"2025-07-02T14:51:16.927+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.EmailController:\n\t","context":""}
{"timestamp":"2025-07-02T14:51:16.927+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.FollowController:\n\t","context":""}
{"timestamp":"2025-07-02T14:51:16.928+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.LikeController:\n\t","context":""}
{"timestamp":"2025-07-02T14:51:16.928+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.MessageController:\n\t","context":""}
{"timestamp":"2025-07-02T14:51:16.929+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.MockupUserController:\n\t","context":""}
{"timestamp":"2025-07-02T14:51:16.929+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.PermissionController:\n\t","context":""}
{"timestamp":"2025-07-02T14:51:16.930+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.PostController:\n\t","context":""}
{"timestamp":"2025-07-02T14:51:16.930+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.RoleController:\n\t","context":""}
{"timestamp":"2025-07-02T14:51:16.930+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.ShareController:\n\t","context":""}
{"timestamp":"2025-07-02T14:51:16.931+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.UserController:\n\t","context":""}
{"timestamp":"2025-07-02T14:51:16.931+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.UserHomePageController:\n\t","context":""}
{"timestamp":"2025-07-02T14:51:16.937+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.w.WebSocketChatHandler:\n\t{[MESSAGE],[/chat.sendMessage]}: sendMessage(MessageEntity)","context":""}
{"timestamp":"2025-07-02T14:51:16.938+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.b.a.w.s.e.BasicErrorController:\n\t","context":""}
{"timestamp":"2025-07-02T14:51:16.939+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.w.a.MultipleOpenApiWebMvcResource:\n\t","context":""}
{"timestamp":"2025-07-02T14:51:16.940+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.w.a.OpenApiWebMvcResource:\n\t","context":""}
{"timestamp":"2025-07-02T14:51:16.940+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.w.u.SwaggerWelcomeWebMvc:\n\t","context":""}
{"timestamp":"2025-07-02T14:51:16.941+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.w.u.SwaggerConfigResource:\n\t","context":""}
{"timestamp":"2025-07-02T14:51:17.021+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice","context":""}
{"timestamp":"2025-07-02T14:51:17.084+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice","context":""}
{"timestamp":"2025-07-02T14:51:17.438+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/actuator/**'], Ant [pattern='/actuator/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T14:51:17.439+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/v3/**'], Ant [pattern='/v3/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T14:51:17.440+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/webjars/**'], Ant [pattern='/webjars/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T14:51:17.440+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/swagger-ui/**'], Ant [pattern='/swagger-ui/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T14:51:17.440+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/swagger-ui.html'], Ant [pattern='/swagger-ui.html']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T14:51:17.441+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/v3/api-docs/**'], Ant [pattern='/v3/api-docs/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T14:51:17.441+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/upload/**'], Ant [pattern='/upload/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T14:51:17.549+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]","context":""}
{"timestamp":"2025-07-02T14:51:17.549+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]","context":""}
{"timestamp":"2025-07-02T14:51:17.550+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"Starting...","context":""}
{"timestamp":"2025-07-02T14:51:17.551+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@465d47fe]","context":""}
{"timestamp":"2025-07-02T14:51:17.551+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"brokerChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@465d47fe]","context":""}
{"timestamp":"2025-07-02T14:51:17.552+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@465d47fe]]","context":""}
{"timestamp":"2025-07-02T14:51:17.553+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"Started.","context":""}
{"timestamp":"2025-07-02T14:51:17.554+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]","context":""}
{"timestamp":"2025-07-02T14:51:17.555+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]","context":""}
{"timestamp":"2025-07-02T14:51:17.588+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat started on port 8080 (http) with context path '/'","context":""}
{"timestamp":"2025-07-02T14:51:17.642+0700","level":"INFO","thread":"restartedMain","logger":"com.oss.socialmedia.SocialmediaApplication","message":"Started SocialmediaApplication in 7.792 seconds (process running for 8.608)","context":""}
{"timestamp":"2025-07-02T14:51:28.404+0700","level":"INFO","thread":"http-nio-8080-exec-2","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","context":""}
{"timestamp":"2025-07-02T14:51:28.405+0700","level":"INFO","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Initializing Servlet 'dispatcherServlet'","context":""}
{"timestamp":"2025-07-02T14:51:28.405+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected StandardServletMultipartResolver","context":""}
{"timestamp":"2025-07-02T14:51:28.406+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected AcceptHeaderLocaleResolver","context":""}
{"timestamp":"2025-07-02T14:51:28.406+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected FixedThemeResolver","context":""}
{"timestamp":"2025-07-02T14:51:28.409+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@645363e9","context":""}
{"timestamp":"2025-07-02T14:51:28.410+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected org.springframework.web.servlet.support.SessionFlashMapManager@4d88aebf","context":""}
{"timestamp":"2025-07-02T14:51:28.411+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data","context":""}
{"timestamp":"2025-07-02T14:51:28.412+0700","level":"INFO","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Completed initialization in 7 ms","context":""}
{"timestamp":"2025-07-02T14:51:28.482+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"POST \"/api/v1/auth/register\", parameters={}","context":""}
{"timestamp":"2025-07-02T14:51:28.485+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"Mapped to com.oss.socialmedia.controller.AuthController#register(ReqCreationUserDTO)","context":""}
{"timestamp":"2025-07-02T14:51:28.598+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","message":"Read \"application/json;charset=UTF-8\" to [ReqCreationUserDTO(lastName=Thong, firstName=Ho, username=ThongHo, dob=2025-03-01T07:31:39.644Z, ema (truncated)...]","context":""}
{"timestamp":"2025-07-02T14:51:28.840+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"Using @ExceptionHandler com.oss.socialmedia.exception.GlobalException#handleIdInvalidException(IdInvalidException, WebRequest)","context":""}
{"timestamp":"2025-07-02T14:51:28.860+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","context":""}
{"timestamp":"2025-07-02T14:51:28.862+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Writing [com.oss.socialmedia.controller.response.ResErrorDTO@33502d35]","context":""}
{"timestamp":"2025-07-02T14:51:28.874+0700","level":"WARN","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"Resolved [com.oss.socialmedia.exception.IdInvalidException: Email admin03@gmail.comđã tồn tại, vui lòng sử dụng email khác.]","context":""}
{"timestamp":"2025-07-02T14:51:28.876+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Completed 404 NOT_FOUND","context":""}
{"timestamp":"2025-07-02T14:52:17.528+0700","level":"INFO","thread":"MessageBroker-1","logger":"org.springframework.web.socket.config.WebSocketMessageBrokerStats","message":"WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]","context":""}
{"timestamp":"2025-07-02T14:54:29.879+0700","level":"DEBUG","thread":"http-nio-8080-exec-5","logger":"org.springframework.web.servlet.DispatcherServlet","message":"POST \"/api/v1/auth/register\", parameters={}","context":""}
{"timestamp":"2025-07-02T14:54:29.880+0700","level":"DEBUG","thread":"http-nio-8080-exec-5","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"Mapped to com.oss.socialmedia.controller.AuthController#register(ReqCreationUserDTO)","context":""}
{"timestamp":"2025-07-02T14:54:29.883+0700","level":"DEBUG","thread":"http-nio-8080-exec-5","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","message":"Read \"application/json;charset=UTF-8\" to [ReqCreationUserDTO(lastName=Thong, firstName=Ho, username=ThongHo, dob=2025-03-01T07:31:39.644Z, ema (truncated)...]","context":""}
{"timestamp":"2025-07-02T14:54:30.096+0700","level":"INFO","thread":"http-nio-8080-exec-5","logger":"USER-SERVICE","message":"Save register user: ReqCreationUserDTO(lastName=Thong, firstName=Ho, username=ThongHo, dob=2025-03-01T07:31:39.644Z, email=admin02@gmail.com, password=$2a$10$FrIt/3ZEh7paVfffJrz4ROs32unH3IwrgU8uF3CeHFIYG/wLRTK2y, phoneNumber=string, gender=MALE, status=ACTIVE, roles=[6858bf26164257fa90c49e92])","context":""}
{"timestamp":"2025-07-02T14:54:30.166+0700","level":"DEBUG","thread":"http-nio-8080-exec-5","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","context":""}
{"timestamp":"2025-07-02T14:54:30.166+0700","level":"DEBUG","thread":"http-nio-8080-exec-5","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Writing [com.oss.socialmedia.controller.response.UserDTO@56d69657]","context":""}
{"timestamp":"2025-07-02T14:54:30.171+0700","level":"WARN","thread":"http-nio-8080-exec-5","logger":"org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver","message":"Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Unimplemented method 'getUserName']","context":""}
{"timestamp":"2025-07-02T14:54:30.172+0700","level":"DEBUG","thread":"http-nio-8080-exec-5","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Completed 500 INTERNAL_SERVER_ERROR","context":""}
{"timestamp":"2025-07-02T14:58:16.729+0700","level":"INFO","thread":"restartedMain","logger":"com.oss.socialmedia.SocialmediaApplication","message":"Starting SocialmediaApplication using Java 21.0.7 with PID 209566 (/home/thongho/Documents/proJAVA/oss-socialmedia/backend-socialmedia/target/classes started by thongho in /home/thongho/Documents/proJAVA/oss-socialmedia/backend-socialmedia)","context":""}
{"timestamp":"2025-07-02T14:58:16.745+0700","level":"INFO","thread":"restartedMain","logger":"com.oss.socialmedia.SocialmediaApplication","message":"The following 1 profile is active: \"dev\"","context":""}
{"timestamp":"2025-07-02T14:58:16.829+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","context":""}
{"timestamp":"2025-07-02T14:58:18.799+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","context":""}
{"timestamp":"2025-07-02T14:58:18.983+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 163 ms. Found 9 MongoDB repository interfaces.","context":""}
{"timestamp":"2025-07-02T14:58:20.189+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port 8080 (http)","context":""}
{"timestamp":"2025-07-02T14:58:20.215+0700","level":"INFO","thread":"restartedMain","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]","context":""}
{"timestamp":"2025-07-02T14:58:20.216+0700","level":"INFO","thread":"restartedMain","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/10.1.34]","context":""}
{"timestamp":"2025-07-02T14:58:20.285+0700","level":"INFO","thread":"restartedMain","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext","context":""}
{"timestamp":"2025-07-02T14:58:20.286+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 3456 ms","context":""}
{"timestamp":"2025-07-02T14:58:20.631+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.filter.ServerHttpObservationFilter","message":"Filter 'webMvcObservationFilter' configured for use","context":""}
{"timestamp":"2025-07-02T14:58:20.909+0700","level":"INFO","thread":"restartedMain","logger":"org.mongodb.driver.client","message":"MongoClient with metadata {\"driver\": {\"name\": \"mongo-java-driver|sync|spring-boot\", \"version\": \"5.2.1\"}, \"os\": {\"type\": \"Linux\", \"name\": \"Linux\", \"architecture\": \"amd64\", \"version\": \"6.8.0-60-generic\"}, \"platform\": \"Java/Oracle Corporation/21.0.7+8-LTS-245\"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@790b86aa], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@6eb1960f, com.mongodb.Jep395RecordCodecProvider@68689afb, com.mongodb.KotlinCodecProvider@24d98dd]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27018], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@275660e8], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}","context":""}
{"timestamp":"2025-07-02T14:58:20.960+0700","level":"INFO","thread":"cluster-ClusterId{value='6864e69cb48c067e89c82096', description='null'}-localhost:27018","logger":"org.mongodb.driver.cluster","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:27018, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=44028685, minRoundTripTimeNanos=0}","context":""}
{"timestamp":"2025-07-02T14:58:21.136+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","message":"LiveReload server is running on port 35729","context":""}
{"timestamp":"2025-07-02T14:58:22.379+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","message":"Global AuthenticationManager configured with UserDetailsService bean with name userDetailsService","context":""}
{"timestamp":"2025-07-02T14:58:22.491+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.server.support.WebSocketHandlerMapping","message":"Patterns [/ws/**] in 'stompWebSocketHandlerMapping'","context":""}
{"timestamp":"2025-07-02T14:58:22.653+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"56 mappings in 'requestMappingHandlerMapping'","context":""}
{"timestamp":"2025-07-02T14:58:22.745+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /upload/images/**, /upload/videos/**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'","context":""}
{"timestamp":"2025-07-02T14:58:23.038+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","message":"Exposing 15 endpoints beneath base path '/actuator'","context":""}
{"timestamp":"2025-07-02T14:58:23.401+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.AuthController:\n\t","context":""}
{"timestamp":"2025-07-02T14:58:23.403+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.CommentController:\n\t","context":""}
{"timestamp":"2025-07-02T14:58:23.403+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.EmailController:\n\t","context":""}
{"timestamp":"2025-07-02T14:58:23.404+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.FollowController:\n\t","context":""}
{"timestamp":"2025-07-02T14:58:23.405+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.LikeController:\n\t","context":""}
{"timestamp":"2025-07-02T14:58:23.405+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.MessageController:\n\t","context":""}
{"timestamp":"2025-07-02T14:58:23.406+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.MockupUserController:\n\t","context":""}
{"timestamp":"2025-07-02T14:58:23.406+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.PermissionController:\n\t","context":""}
{"timestamp":"2025-07-02T14:58:23.407+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.PostController:\n\t","context":""}
{"timestamp":"2025-07-02T14:58:23.408+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.RoleController:\n\t","context":""}
{"timestamp":"2025-07-02T14:58:23.408+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.ShareController:\n\t","context":""}
{"timestamp":"2025-07-02T14:58:23.409+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.UserController:\n\t","context":""}
{"timestamp":"2025-07-02T14:58:23.410+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.UserHomePageController:\n\t","context":""}
{"timestamp":"2025-07-02T14:58:23.417+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.w.WebSocketChatHandler:\n\t{[MESSAGE],[/chat.sendMessage]}: sendMessage(MessageEntity)","context":""}
{"timestamp":"2025-07-02T14:58:23.420+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.b.a.w.s.e.BasicErrorController:\n\t","context":""}
{"timestamp":"2025-07-02T14:58:23.421+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.w.a.MultipleOpenApiWebMvcResource:\n\t","context":""}
{"timestamp":"2025-07-02T14:58:23.422+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.w.a.OpenApiWebMvcResource:\n\t","context":""}
{"timestamp":"2025-07-02T14:58:23.423+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.w.u.SwaggerWelcomeWebMvc:\n\t","context":""}
{"timestamp":"2025-07-02T14:58:23.424+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.w.u.SwaggerConfigResource:\n\t","context":""}
{"timestamp":"2025-07-02T14:58:23.554+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice","context":""}
{"timestamp":"2025-07-02T14:58:23.647+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice","context":""}
{"timestamp":"2025-07-02T14:58:24.050+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/actuator/**'], Ant [pattern='/actuator/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T14:58:24.051+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/v3/**'], Ant [pattern='/v3/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T14:58:24.051+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/webjars/**'], Ant [pattern='/webjars/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T14:58:24.052+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/swagger-ui/**'], Ant [pattern='/swagger-ui/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T14:58:24.053+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/swagger-ui.html'], Ant [pattern='/swagger-ui.html']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T14:58:24.053+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/v3/api-docs/**'], Ant [pattern='/v3/api-docs/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T14:58:24.054+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/upload/**'], Ant [pattern='/upload/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T14:58:24.167+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]","context":""}
{"timestamp":"2025-07-02T14:58:24.168+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]","context":""}
{"timestamp":"2025-07-02T14:58:24.171+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"Starting...","context":""}
{"timestamp":"2025-07-02T14:58:24.172+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@41654a6]","context":""}
{"timestamp":"2025-07-02T14:58:24.173+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"brokerChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@41654a6]","context":""}
{"timestamp":"2025-07-02T14:58:24.177+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@41654a6]]","context":""}
{"timestamp":"2025-07-02T14:58:24.178+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"Started.","context":""}
{"timestamp":"2025-07-02T14:58:24.179+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]","context":""}
{"timestamp":"2025-07-02T14:58:24.179+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]","context":""}
{"timestamp":"2025-07-02T14:58:24.210+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat started on port 8080 (http) with context path '/'","context":""}
{"timestamp":"2025-07-02T14:58:24.251+0700","level":"INFO","thread":"restartedMain","logger":"com.oss.socialmedia.SocialmediaApplication","message":"Started SocialmediaApplication in 8.647 seconds (process running for 9.383)","context":""}
{"timestamp":"2025-07-02T14:58:38.406+0700","level":"INFO","thread":"http-nio-8080-exec-1","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","context":""}
{"timestamp":"2025-07-02T14:58:38.407+0700","level":"INFO","thread":"http-nio-8080-exec-1","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Initializing Servlet 'dispatcherServlet'","context":""}
{"timestamp":"2025-07-02T14:58:38.408+0700","level":"DEBUG","thread":"http-nio-8080-exec-1","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected StandardServletMultipartResolver","context":""}
{"timestamp":"2025-07-02T14:58:38.408+0700","level":"DEBUG","thread":"http-nio-8080-exec-1","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected AcceptHeaderLocaleResolver","context":""}
{"timestamp":"2025-07-02T14:58:38.409+0700","level":"DEBUG","thread":"http-nio-8080-exec-1","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected FixedThemeResolver","context":""}
{"timestamp":"2025-07-02T14:58:38.412+0700","level":"DEBUG","thread":"http-nio-8080-exec-1","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2efcdc99","context":""}
{"timestamp":"2025-07-02T14:58:38.414+0700","level":"DEBUG","thread":"http-nio-8080-exec-1","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected org.springframework.web.servlet.support.SessionFlashMapManager@984bb63","context":""}
{"timestamp":"2025-07-02T14:58:38.416+0700","level":"DEBUG","thread":"http-nio-8080-exec-1","logger":"org.springframework.web.servlet.DispatcherServlet","message":"enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data","context":""}
{"timestamp":"2025-07-02T14:58:38.417+0700","level":"INFO","thread":"http-nio-8080-exec-1","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Completed initialization in 9 ms","context":""}
{"timestamp":"2025-07-02T14:58:38.513+0700","level":"DEBUG","thread":"http-nio-8080-exec-1","logger":"org.springframework.web.servlet.DispatcherServlet","message":"POST \"/api/v1/auth/register\", parameters={}","context":""}
{"timestamp":"2025-07-02T14:58:38.520+0700","level":"DEBUG","thread":"http-nio-8080-exec-1","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"Mapped to com.oss.socialmedia.controller.AuthController#register(ReqCreationUserDTO)","context":""}
{"timestamp":"2025-07-02T14:58:38.670+0700","level":"DEBUG","thread":"http-nio-8080-exec-1","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","message":"Read \"application/json;charset=UTF-8\" to [ReqCreationUserDTO(lastName=Thong, firstName=Ho, username=ThongHo, dob=2025-03-01T07:31:39.644Z, ema (truncated)...]","context":""}
{"timestamp":"2025-07-02T14:59:00.899+0700","level":"INFO","thread":"http-nio-8080-exec-1","logger":"USER-SERVICE","message":"Save register user: ReqCreationUserDTO(lastName=Thong, firstName=Ho, username=ThongHo, dob=2025-03-01T07:31:39.644Z, email=admin01@gmail.com, password=$2a$10$qsjckL/Llqf33Ati8whvh.6vkgPKgsCwoeh3Zs1kYbGvpSpuyCjq., phoneNumber=string, gender=MALE, status=ACTIVE, roles=[6858bf26164257fa90c49e92])","context":""}
{"timestamp":"2025-07-02T14:59:24.131+0700","level":"INFO","thread":"MessageBroker-1","logger":"org.springframework.web.socket.config.WebSocketMessageBrokerStats","message":"WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]","context":""}
{"timestamp":"2025-07-02T15:01:37.876+0700","level":"DEBUG","thread":"http-nio-8080-exec-1","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","context":""}
{"timestamp":"2025-07-02T15:01:37.948+0700","level":"DEBUG","thread":"http-nio-8080-exec-1","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Writing [com.oss.socialmedia.controller.response.UserDTO@17255658]","context":""}
{"timestamp":"2025-07-02T15:01:39.573+0700","level":"WARN","thread":"http-nio-8080-exec-1","logger":"org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver","message":"Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Unimplemented method 'getUserName']","context":""}
{"timestamp":"2025-07-02T15:01:41.513+0700","level":"DEBUG","thread":"http-nio-8080-exec-1","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Completed 500 INTERNAL_SERVER_ERROR","context":""}
{"timestamp":"2025-07-02T15:07:07.215+0700","level":"INFO","thread":"File Watcher","logger":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","message":"Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)","context":""}
{"timestamp":"2025-07-02T15:07:07.231+0700","level":"INFO","thread":"Thread-4","logger":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","message":"Commencing graceful shutdown. Waiting for active requests to complete","context":""}
{"timestamp":"2025-07-02T15:07:07.242+0700","level":"INFO","thread":"tomcat-shutdown","logger":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","message":"Graceful shutdown complete","context":""}
{"timestamp":"2025-07-02T15:07:07.270+0700","level":"DEBUG","thread":"Thread-4","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientOutboundChannel removed SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]","context":""}
{"timestamp":"2025-07-02T15:07:07.272+0700","level":"DEBUG","thread":"Thread-4","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel removed WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]","context":""}
{"timestamp":"2025-07-02T15:07:07.274+0700","level":"INFO","thread":"Thread-4","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"Stopping...","context":""}
{"timestamp":"2025-07-02T15:07:07.277+0700","level":"INFO","thread":"Thread-4","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@41654a6]]","context":""}
{"timestamp":"2025-07-02T15:07:07.280+0700","level":"DEBUG","thread":"Thread-4","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@41654a6]","context":""}
{"timestamp":"2025-07-02T15:07:07.287+0700","level":"DEBUG","thread":"Thread-4","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"brokerChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@41654a6]","context":""}
{"timestamp":"2025-07-02T15:07:07.290+0700","level":"INFO","thread":"Thread-4","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"Stopped.","context":""}
{"timestamp":"2025-07-02T15:07:07.293+0700","level":"DEBUG","thread":"Thread-4","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]","context":""}
{"timestamp":"2025-07-02T15:07:07.296+0700","level":"DEBUG","thread":"Thread-4","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"brokerChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]","context":""}
{"timestamp":"2025-07-02T15:07:07.537+0700","level":"INFO","thread":"restartedMain","logger":"com.oss.socialmedia.SocialmediaApplication","message":"Starting SocialmediaApplication using Java 21.0.7 with PID 209566 (/home/thongho/Documents/proJAVA/oss-socialmedia/backend-socialmedia/target/classes started by thongho in /home/thongho/Documents/proJAVA/oss-socialmedia/backend-socialmedia)","context":""}
{"timestamp":"2025-07-02T15:07:07.538+0700","level":"INFO","thread":"restartedMain","logger":"com.oss.socialmedia.SocialmediaApplication","message":"The following 1 profile is active: \"dev\"","context":""}
{"timestamp":"2025-07-02T15:07:08.251+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","context":""}
{"timestamp":"2025-07-02T15:07:08.285+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 32 ms. Found 9 MongoDB repository interfaces.","context":""}
{"timestamp":"2025-07-02T15:07:08.425+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port 8080 (http)","context":""}
{"timestamp":"2025-07-02T15:07:08.426+0700","level":"INFO","thread":"restartedMain","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]","context":""}
{"timestamp":"2025-07-02T15:07:08.427+0700","level":"INFO","thread":"restartedMain","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/10.1.34]","context":""}
{"timestamp":"2025-07-02T15:07:08.439+0700","level":"INFO","thread":"restartedMain","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext","context":""}
{"timestamp":"2025-07-02T15:07:08.440+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 899 ms","context":""}
{"timestamp":"2025-07-02T15:07:08.511+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.filter.ServerHttpObservationFilter","message":"Filter 'webMvcObservationFilter' configured for use","context":""}
{"timestamp":"2025-07-02T15:07:08.546+0700","level":"INFO","thread":"restartedMain","logger":"org.mongodb.driver.client","message":"MongoClient with metadata {\"driver\": {\"name\": \"mongo-java-driver|sync|spring-boot\", \"version\": \"5.2.1\"}, \"os\": {\"type\": \"Linux\", \"name\": \"Linux\", \"architecture\": \"amd64\", \"version\": \"6.8.0-60-generic\"}, \"platform\": \"Java/Oracle Corporation/21.0.7+8-LTS-245\"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@344c8e75], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@6eb1960f, com.mongodb.Jep395RecordCodecProvider@68689afb, com.mongodb.KotlinCodecProvider@24d98dd]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27018], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@7a8ec2b3], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}","context":""}
{"timestamp":"2025-07-02T15:07:08.553+0700","level":"INFO","thread":"cluster-ClusterId{value='6864e8acb48c067e89c82098', description='null'}-localhost:27018","logger":"org.mongodb.driver.cluster","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:27018, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=7178991, minRoundTripTimeNanos=0}","context":""}
{"timestamp":"2025-07-02T15:07:08.570+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","message":"LiveReload server is running on port 35729","context":""}
{"timestamp":"2025-07-02T15:07:08.914+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","message":"Global AuthenticationManager configured with UserDetailsService bean with name userDetailsService","context":""}
{"timestamp":"2025-07-02T15:07:08.932+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.server.support.WebSocketHandlerMapping","message":"Patterns [/ws/**] in 'stompWebSocketHandlerMapping'","context":""}
{"timestamp":"2025-07-02T15:07:08.990+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"56 mappings in 'requestMappingHandlerMapping'","context":""}
{"timestamp":"2025-07-02T15:07:09.014+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /upload/images/**, /upload/videos/**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'","context":""}
{"timestamp":"2025-07-02T15:07:09.109+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","message":"Exposing 15 endpoints beneath base path '/actuator'","context":""}
{"timestamp":"2025-07-02T15:07:09.168+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.AuthController:\n\t","context":""}
{"timestamp":"2025-07-02T15:07:09.169+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.CommentController:\n\t","context":""}
{"timestamp":"2025-07-02T15:07:09.169+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.EmailController:\n\t","context":""}
{"timestamp":"2025-07-02T15:07:09.170+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.FollowController:\n\t","context":""}
{"timestamp":"2025-07-02T15:07:09.170+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.LikeController:\n\t","context":""}
{"timestamp":"2025-07-02T15:07:09.170+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.MessageController:\n\t","context":""}
{"timestamp":"2025-07-02T15:07:09.171+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.MockupUserController:\n\t","context":""}
{"timestamp":"2025-07-02T15:07:09.171+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.PermissionController:\n\t","context":""}
{"timestamp":"2025-07-02T15:07:09.172+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.PostController:\n\t","context":""}
{"timestamp":"2025-07-02T15:07:09.172+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.RoleController:\n\t","context":""}
{"timestamp":"2025-07-02T15:07:09.172+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.ShareController:\n\t","context":""}
{"timestamp":"2025-07-02T15:07:09.173+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.UserController:\n\t","context":""}
{"timestamp":"2025-07-02T15:07:09.173+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.UserHomePageController:\n\t","context":""}
{"timestamp":"2025-07-02T15:07:09.174+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.w.WebSocketChatHandler:\n\t{[MESSAGE],[/chat.sendMessage]}: sendMessage(MessageEntity)","context":""}
{"timestamp":"2025-07-02T15:07:09.175+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.b.a.w.s.e.BasicErrorController:\n\t","context":""}
{"timestamp":"2025-07-02T15:07:09.176+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.w.a.MultipleOpenApiWebMvcResource:\n\t","context":""}
{"timestamp":"2025-07-02T15:07:09.177+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.w.a.OpenApiWebMvcResource:\n\t","context":""}
{"timestamp":"2025-07-02T15:07:09.177+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.w.u.SwaggerWelcomeWebMvc:\n\t","context":""}
{"timestamp":"2025-07-02T15:07:09.178+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.w.u.SwaggerConfigResource:\n\t","context":""}
{"timestamp":"2025-07-02T15:07:09.202+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice","context":""}
{"timestamp":"2025-07-02T15:07:09.219+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice","context":""}
{"timestamp":"2025-07-02T15:07:09.334+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/actuator/**'], Ant [pattern='/actuator/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T15:07:09.335+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/v3/**'], Ant [pattern='/v3/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T15:07:09.335+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/webjars/**'], Ant [pattern='/webjars/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T15:07:09.335+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/swagger-ui/**'], Ant [pattern='/swagger-ui/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T15:07:09.336+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/swagger-ui.html'], Ant [pattern='/swagger-ui.html']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T15:07:09.336+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/v3/api-docs/**'], Ant [pattern='/v3/api-docs/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T15:07:09.336+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/upload/**'], Ant [pattern='/upload/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T15:07:09.372+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]","context":""}
{"timestamp":"2025-07-02T15:07:09.373+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]","context":""}
{"timestamp":"2025-07-02T15:07:09.373+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"Starting...","context":""}
{"timestamp":"2025-07-02T15:07:09.374+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@57dc5079]","context":""}
{"timestamp":"2025-07-02T15:07:09.374+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"brokerChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@57dc5079]","context":""}
{"timestamp":"2025-07-02T15:07:09.374+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@57dc5079]]","context":""}
{"timestamp":"2025-07-02T15:07:09.375+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"Started.","context":""}
{"timestamp":"2025-07-02T15:07:09.375+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]","context":""}
{"timestamp":"2025-07-02T15:07:09.375+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]","context":""}
{"timestamp":"2025-07-02T15:07:09.383+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat started on port 8080 (http) with context path '/'","context":""}
{"timestamp":"2025-07-02T15:07:09.406+0700","level":"INFO","thread":"restartedMain","logger":"com.oss.socialmedia.SocialmediaApplication","message":"Started SocialmediaApplication in 1.957 seconds (process running for 534.538)","context":""}
{"timestamp":"2025-07-02T15:07:09.411+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","message":"Condition evaluation unchanged","context":""}
{"timestamp":"2025-07-02T15:09:03.049+0700","level":"INFO","thread":"restartedMain","logger":"com.oss.socialmedia.SocialmediaApplication","message":"Starting SocialmediaApplication using Java 21.0.7 with PID 219216 (/home/thongho/Documents/proJAVA/oss-socialmedia/backend-socialmedia/target/classes started by thongho in /home/thongho/Documents/proJAVA/oss-socialmedia/backend-socialmedia)","context":""}
{"timestamp":"2025-07-02T15:09:03.058+0700","level":"INFO","thread":"restartedMain","logger":"com.oss.socialmedia.SocialmediaApplication","message":"The following 1 profile is active: \"dev\"","context":""}
{"timestamp":"2025-07-02T15:09:03.106+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","context":""}
{"timestamp":"2025-07-02T15:09:04.449+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","context":""}
{"timestamp":"2025-07-02T15:09:04.591+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 113 ms. Found 9 MongoDB repository interfaces.","context":""}
{"timestamp":"2025-07-02T15:09:05.176+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port 8080 (http)","context":""}
{"timestamp":"2025-07-02T15:09:05.204+0700","level":"INFO","thread":"restartedMain","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]","context":""}
{"timestamp":"2025-07-02T15:09:05.205+0700","level":"INFO","thread":"restartedMain","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/10.1.34]","context":""}
{"timestamp":"2025-07-02T15:09:05.273+0700","level":"INFO","thread":"restartedMain","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext","context":""}
{"timestamp":"2025-07-02T15:09:05.276+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 2169 ms","context":""}
{"timestamp":"2025-07-02T15:09:05.506+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.filter.ServerHttpObservationFilter","message":"Filter 'webMvcObservationFilter' configured for use","context":""}
{"timestamp":"2025-07-02T15:09:05.734+0700","level":"INFO","thread":"restartedMain","logger":"org.mongodb.driver.client","message":"MongoClient with metadata {\"driver\": {\"name\": \"mongo-java-driver|sync|spring-boot\", \"version\": \"5.2.1\"}, \"os\": {\"type\": \"Linux\", \"name\": \"Linux\", \"architecture\": \"amd64\", \"version\": \"6.8.0-60-generic\"}, \"platform\": \"Java/Oracle Corporation/21.0.7+8-LTS-245\"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@3d65f4bf], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@49f1c1af, com.mongodb.Jep395RecordCodecProvider@66eabca3, com.mongodb.KotlinCodecProvider@7d81c6ef]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27018], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@6fd305ec], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}","context":""}
{"timestamp":"2025-07-02T15:09:05.770+0700","level":"INFO","thread":"cluster-ClusterId{value='6864e9216a41c571414e3638', description='null'}-localhost:27018","logger":"org.mongodb.driver.cluster","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:27018, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=33635445, minRoundTripTimeNanos=0}","context":""}
{"timestamp":"2025-07-02T15:09:05.893+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","message":"LiveReload server is running on port 35729","context":""}
{"timestamp":"2025-07-02T15:09:06.905+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","message":"Global AuthenticationManager configured with UserDetailsService bean with name userDetailsService","context":""}
{"timestamp":"2025-07-02T15:09:07.002+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.server.support.WebSocketHandlerMapping","message":"Patterns [/ws/**] in 'stompWebSocketHandlerMapping'","context":""}
{"timestamp":"2025-07-02T15:09:07.135+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"56 mappings in 'requestMappingHandlerMapping'","context":""}
{"timestamp":"2025-07-02T15:09:07.197+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /upload/images/**, /upload/videos/**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'","context":""}
{"timestamp":"2025-07-02T15:09:07.381+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","message":"Exposing 15 endpoints beneath base path '/actuator'","context":""}
{"timestamp":"2025-07-02T15:09:07.553+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.AuthController:\n\t","context":""}
{"timestamp":"2025-07-02T15:09:07.553+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.CommentController:\n\t","context":""}
{"timestamp":"2025-07-02T15:09:07.554+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.EmailController:\n\t","context":""}
{"timestamp":"2025-07-02T15:09:07.554+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.FollowController:\n\t","context":""}
{"timestamp":"2025-07-02T15:09:07.555+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.LikeController:\n\t","context":""}
{"timestamp":"2025-07-02T15:09:07.555+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.MessageController:\n\t","context":""}
{"timestamp":"2025-07-02T15:09:07.556+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.MockupUserController:\n\t","context":""}
{"timestamp":"2025-07-02T15:09:07.556+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.PermissionController:\n\t","context":""}
{"timestamp":"2025-07-02T15:09:07.556+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.PostController:\n\t","context":""}
{"timestamp":"2025-07-02T15:09:07.557+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.RoleController:\n\t","context":""}
{"timestamp":"2025-07-02T15:09:07.557+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.ShareController:\n\t","context":""}
{"timestamp":"2025-07-02T15:09:07.558+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.UserController:\n\t","context":""}
{"timestamp":"2025-07-02T15:09:07.558+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.UserHomePageController:\n\t","context":""}
{"timestamp":"2025-07-02T15:09:07.563+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.w.WebSocketChatHandler:\n\t{[MESSAGE],[/chat.sendMessage]}: sendMessage(MessageEntity)","context":""}
{"timestamp":"2025-07-02T15:09:07.565+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.b.a.w.s.e.BasicErrorController:\n\t","context":""}
{"timestamp":"2025-07-02T15:09:07.566+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.w.a.MultipleOpenApiWebMvcResource:\n\t","context":""}
{"timestamp":"2025-07-02T15:09:07.567+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.w.a.OpenApiWebMvcResource:\n\t","context":""}
{"timestamp":"2025-07-02T15:09:07.568+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.w.u.SwaggerWelcomeWebMvc:\n\t","context":""}
{"timestamp":"2025-07-02T15:09:07.569+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.w.u.SwaggerConfigResource:\n\t","context":""}
{"timestamp":"2025-07-02T15:09:07.640+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice","context":""}
{"timestamp":"2025-07-02T15:09:07.700+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice","context":""}
{"timestamp":"2025-07-02T15:09:07.964+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/actuator/**'], Ant [pattern='/actuator/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T15:09:07.965+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/v3/**'], Ant [pattern='/v3/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T15:09:07.965+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/webjars/**'], Ant [pattern='/webjars/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T15:09:07.966+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/swagger-ui/**'], Ant [pattern='/swagger-ui/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T15:09:07.966+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/swagger-ui.html'], Ant [pattern='/swagger-ui.html']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T15:09:07.966+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/v3/api-docs/**'], Ant [pattern='/v3/api-docs/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T15:09:07.967+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/upload/**'], Ant [pattern='/upload/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T15:09:08.044+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]","context":""}
{"timestamp":"2025-07-02T15:09:08.045+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]","context":""}
{"timestamp":"2025-07-02T15:09:08.046+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"Starting...","context":""}
{"timestamp":"2025-07-02T15:09:08.046+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@38050c46]","context":""}
{"timestamp":"2025-07-02T15:09:08.047+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"brokerChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@38050c46]","context":""}
{"timestamp":"2025-07-02T15:09:08.048+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@38050c46]]","context":""}
{"timestamp":"2025-07-02T15:09:08.049+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"Started.","context":""}
{"timestamp":"2025-07-02T15:09:08.050+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]","context":""}
{"timestamp":"2025-07-02T15:09:08.050+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]","context":""}
{"timestamp":"2025-07-02T15:09:08.065+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat started on port 8080 (http) with context path '/'","context":""}
{"timestamp":"2025-07-02T15:09:08.084+0700","level":"INFO","thread":"restartedMain","logger":"com.oss.socialmedia.SocialmediaApplication","message":"Started SocialmediaApplication in 5.703 seconds (process running for 6.119)","context":""}
{"timestamp":"2025-07-02T15:09:20.625+0700","level":"INFO","thread":"http-nio-8080-exec-2","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","context":""}
{"timestamp":"2025-07-02T15:09:20.625+0700","level":"INFO","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Initializing Servlet 'dispatcherServlet'","context":""}
{"timestamp":"2025-07-02T15:09:20.626+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected StandardServletMultipartResolver","context":""}
{"timestamp":"2025-07-02T15:09:20.626+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected AcceptHeaderLocaleResolver","context":""}
{"timestamp":"2025-07-02T15:09:20.627+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected FixedThemeResolver","context":""}
{"timestamp":"2025-07-02T15:09:20.629+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5911a065","context":""}
{"timestamp":"2025-07-02T15:09:20.630+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected org.springframework.web.servlet.support.SessionFlashMapManager@5f5dc9f","context":""}
{"timestamp":"2025-07-02T15:09:20.631+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data","context":""}
{"timestamp":"2025-07-02T15:09:20.632+0700","level":"INFO","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Completed initialization in 6 ms","context":""}
{"timestamp":"2025-07-02T15:09:20.685+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"POST \"/api/v1/auth/register\", parameters={}","context":""}
{"timestamp":"2025-07-02T15:09:20.689+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"Mapped to com.oss.socialmedia.controller.AuthController#register(ReqCreationUserDTO)","context":""}
{"timestamp":"2025-07-02T15:09:20.771+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","message":"Read \"application/json;charset=UTF-8\" to [ReqCreationUserDTO(lastName=Thong, firstName=Ho, username=ThongHo, dob=2025-03-01T07:31:39.644Z, ema (truncated)...]","context":""}
{"timestamp":"2025-07-02T15:09:20.954+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"Using @ExceptionHandler com.oss.socialmedia.exception.GlobalException#handleIdInvalidException(IdInvalidException, WebRequest)","context":""}
{"timestamp":"2025-07-02T15:09:20.970+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","context":""}
{"timestamp":"2025-07-02T15:09:20.972+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Writing [com.oss.socialmedia.controller.response.ResErrorDTO@6e13aa49]","context":""}
{"timestamp":"2025-07-02T15:09:20.981+0700","level":"WARN","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"Resolved [com.oss.socialmedia.exception.IdInvalidException: Email admin01@gmail.comđã tồn tại, vui lòng sử dụng email khác.]","context":""}
{"timestamp":"2025-07-02T15:09:20.981+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Completed 404 NOT_FOUND","context":""}
{"timestamp":"2025-07-02T15:09:32.267+0700","level":"DEBUG","thread":"http-nio-8080-exec-3","logger":"org.springframework.web.servlet.DispatcherServlet","message":"POST \"/api/v1/auth/register\", parameters={}","context":""}
{"timestamp":"2025-07-02T15:09:32.268+0700","level":"DEBUG","thread":"http-nio-8080-exec-3","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"Mapped to com.oss.socialmedia.controller.AuthController#register(ReqCreationUserDTO)","context":""}
{"timestamp":"2025-07-02T15:09:32.278+0700","level":"DEBUG","thread":"http-nio-8080-exec-3","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","message":"Read \"application/json;charset=UTF-8\" to [ReqCreationUserDTO(lastName=Thong, firstName=Ho, username=ThongHo, dob=2025-03-01T07:31:39.644Z, ema (truncated)...]","context":""}
{"timestamp":"2025-07-02T15:09:32.434+0700","level":"INFO","thread":"http-nio-8080-exec-3","logger":"USER-SERVICE","message":"Save register user: ReqCreationUserDTO(lastName=Thong, firstName=Ho, username=ThongHo, dob=2025-03-01T07:31:39.644Z, email=admin04@gmail.com, password=$2a$10$BJ5nmjIXZAVJG/31Aj3rjerl4O5ftidn/3rl3U5hsucB4GX7sWG0e, phoneNumber=string, gender=MALE, status=ACTIVE, roles=[6858bf26164257fa90c49e92])","context":""}
{"timestamp":"2025-07-02T15:09:32.491+0700","level":"DEBUG","thread":"http-nio-8080-exec-3","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","context":""}
{"timestamp":"2025-07-02T15:09:32.491+0700","level":"DEBUG","thread":"http-nio-8080-exec-3","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Writing [com.oss.socialmedia.controller.response.UserDTO@79f953a6]","context":""}
{"timestamp":"2025-07-02T15:09:32.495+0700","level":"WARN","thread":"http-nio-8080-exec-3","logger":"org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver","message":"Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Unimplemented method 'getUserName']","context":""}
{"timestamp":"2025-07-02T15:09:32.496+0700","level":"DEBUG","thread":"http-nio-8080-exec-3","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Completed 500 INTERNAL_SERVER_ERROR","context":""}
{"timestamp":"2025-07-02T15:10:08.033+0700","level":"INFO","thread":"MessageBroker-1","logger":"org.springframework.web.socket.config.WebSocketMessageBrokerStats","message":"WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]","context":""}
{"timestamp":"2025-07-02T15:12:09.088+0700","level":"INFO","thread":"File Watcher","logger":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","message":"Restarting due to 11 class path changes (0 additions, 0 deletions, 11 modifications)","context":""}
{"timestamp":"2025-07-02T15:12:09.103+0700","level":"INFO","thread":"Thread-4","logger":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","message":"Commencing graceful shutdown. Waiting for active requests to complete","context":""}
{"timestamp":"2025-07-02T15:12:09.111+0700","level":"INFO","thread":"tomcat-shutdown","logger":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","message":"Graceful shutdown complete","context":""}
{"timestamp":"2025-07-02T15:12:09.160+0700","level":"DEBUG","thread":"Thread-4","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientOutboundChannel removed SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]","context":""}
{"timestamp":"2025-07-02T15:12:09.161+0700","level":"DEBUG","thread":"Thread-4","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel removed WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]","context":""}
{"timestamp":"2025-07-02T15:12:09.162+0700","level":"INFO","thread":"Thread-4","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"Stopping...","context":""}
{"timestamp":"2025-07-02T15:12:09.163+0700","level":"INFO","thread":"Thread-4","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@38050c46]]","context":""}
{"timestamp":"2025-07-02T15:12:09.164+0700","level":"DEBUG","thread":"Thread-4","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@38050c46]","context":""}
{"timestamp":"2025-07-02T15:12:09.165+0700","level":"DEBUG","thread":"Thread-4","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"brokerChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@38050c46]","context":""}
{"timestamp":"2025-07-02T15:12:09.166+0700","level":"INFO","thread":"Thread-4","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"Stopped.","context":""}
{"timestamp":"2025-07-02T15:12:09.166+0700","level":"DEBUG","thread":"Thread-4","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]","context":""}
{"timestamp":"2025-07-02T15:12:09.167+0700","level":"DEBUG","thread":"Thread-4","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"brokerChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]","context":""}
{"timestamp":"2025-07-02T15:12:09.411+0700","level":"INFO","thread":"restartedMain","logger":"com.oss.socialmedia.SocialmediaApplication","message":"Starting SocialmediaApplication using Java 21.0.7 with PID 219216 (/home/thongho/Documents/proJAVA/oss-socialmedia/backend-socialmedia/target/classes started by thongho in /home/thongho/Documents/proJAVA/oss-socialmedia/backend-socialmedia)","context":""}
{"timestamp":"2025-07-02T15:12:09.412+0700","level":"INFO","thread":"restartedMain","logger":"com.oss.socialmedia.SocialmediaApplication","message":"The following 1 profile is active: \"dev\"","context":""}
{"timestamp":"2025-07-02T15:12:09.795+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","context":""}
{"timestamp":"2025-07-02T15:12:09.820+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 23 ms. Found 9 MongoDB repository interfaces.","context":""}
{"timestamp":"2025-07-02T15:12:09.982+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port 8080 (http)","context":""}
{"timestamp":"2025-07-02T15:12:09.985+0700","level":"INFO","thread":"restartedMain","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]","context":""}
{"timestamp":"2025-07-02T15:12:09.985+0700","level":"INFO","thread":"restartedMain","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/10.1.34]","context":""}
{"timestamp":"2025-07-02T15:12:09.996+0700","level":"INFO","thread":"restartedMain","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext","context":""}
{"timestamp":"2025-07-02T15:12:09.997+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 581 ms","context":""}
{"timestamp":"2025-07-02T15:12:10.127+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.filter.ServerHttpObservationFilter","message":"Filter 'webMvcObservationFilter' configured for use","context":""}
{"timestamp":"2025-07-02T15:12:10.201+0700","level":"INFO","thread":"restartedMain","logger":"org.mongodb.driver.client","message":"MongoClient with metadata {\"driver\": {\"name\": \"mongo-java-driver|sync|spring-boot\", \"version\": \"5.2.1\"}, \"os\": {\"type\": \"Linux\", \"name\": \"Linux\", \"architecture\": \"amd64\", \"version\": \"6.8.0-60-generic\"}, \"platform\": \"Java/Oracle Corporation/21.0.7+8-LTS-245\"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@17447f96], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@49f1c1af, com.mongodb.Jep395RecordCodecProvider@66eabca3, com.mongodb.KotlinCodecProvider@7d81c6ef]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27018], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@17c4673b], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}","context":""}
{"timestamp":"2025-07-02T15:12:10.239+0700","level":"INFO","thread":"cluster-ClusterId{value='6864e9da6a41c571414e363a', description='null'}-localhost:27018","logger":"org.mongodb.driver.cluster","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:27018, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=34831136, minRoundTripTimeNanos=0}","context":""}
{"timestamp":"2025-07-02T15:12:10.253+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","message":"LiveReload server is running on port 35729","context":""}
{"timestamp":"2025-07-02T15:12:10.841+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","message":"Global AuthenticationManager configured with UserDetailsService bean with name userDetailsService","context":""}
{"timestamp":"2025-07-02T15:12:10.888+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.server.support.WebSocketHandlerMapping","message":"Patterns [/ws/**] in 'stompWebSocketHandlerMapping'","context":""}
{"timestamp":"2025-07-02T15:12:10.964+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"56 mappings in 'requestMappingHandlerMapping'","context":""}
{"timestamp":"2025-07-02T15:12:11.012+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /upload/images/**, /upload/videos/**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'","context":""}
{"timestamp":"2025-07-02T15:12:11.154+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","message":"Exposing 15 endpoints beneath base path '/actuator'","context":""}
{"timestamp":"2025-07-02T15:12:11.264+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.AuthController:\n\t","context":""}
{"timestamp":"2025-07-02T15:12:11.264+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.CommentController:\n\t","context":""}
{"timestamp":"2025-07-02T15:12:11.264+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.EmailController:\n\t","context":""}
{"timestamp":"2025-07-02T15:12:11.265+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.FollowController:\n\t","context":""}
{"timestamp":"2025-07-02T15:12:11.265+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.LikeController:\n\t","context":""}
{"timestamp":"2025-07-02T15:12:11.265+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.MessageController:\n\t","context":""}
{"timestamp":"2025-07-02T15:12:11.265+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.MockupUserController:\n\t","context":""}
{"timestamp":"2025-07-02T15:12:11.266+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.PermissionController:\n\t","context":""}
{"timestamp":"2025-07-02T15:12:11.266+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.PostController:\n\t","context":""}
{"timestamp":"2025-07-02T15:12:11.266+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.RoleController:\n\t","context":""}
{"timestamp":"2025-07-02T15:12:11.267+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.ShareController:\n\t","context":""}
{"timestamp":"2025-07-02T15:12:11.267+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.UserController:\n\t","context":""}
{"timestamp":"2025-07-02T15:12:11.267+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.c.UserHomePageController:\n\t","context":""}
{"timestamp":"2025-07-02T15:12:11.268+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\tc.o.s.w.WebSocketChatHandler:\n\t{[MESSAGE],[/chat.sendMessage]}: sendMessage(MessageEntity)","context":""}
{"timestamp":"2025-07-02T15:12:11.270+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.b.a.w.s.e.BasicErrorController:\n\t","context":""}
{"timestamp":"2025-07-02T15:12:11.271+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.w.a.MultipleOpenApiWebMvcResource:\n\t","context":""}
{"timestamp":"2025-07-02T15:12:11.272+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.w.a.OpenApiWebMvcResource:\n\t","context":""}
{"timestamp":"2025-07-02T15:12:11.273+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.w.u.SwaggerWelcomeWebMvc:\n\t","context":""}
{"timestamp":"2025-07-02T15:12:11.273+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler","message":"\n\to.s.w.u.SwaggerConfigResource:\n\t","context":""}
{"timestamp":"2025-07-02T15:12:11.317+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice","context":""}
{"timestamp":"2025-07-02T15:12:11.346+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice","context":""}
{"timestamp":"2025-07-02T15:12:11.543+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/actuator/**'], Ant [pattern='/actuator/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T15:12:11.543+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/v3/**'], Ant [pattern='/v3/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T15:12:11.543+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/webjars/**'], Ant [pattern='/webjars/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T15:12:11.543+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/swagger-ui/**'], Ant [pattern='/swagger-ui/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T15:12:11.544+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/swagger-ui.html'], Ant [pattern='/swagger-ui.html']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T15:12:11.544+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/v3/api-docs/**'], Ant [pattern='/v3/api-docs/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T15:12:11.544+0700","level":"WARN","thread":"restartedMain","logger":"org.springframework.security.config.annotation.web.builders.WebSecurity","message":"You are asking Spring Security to ignore Deferred [Mvc [pattern='/upload/**'], Ant [pattern='/upload/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.","context":""}
{"timestamp":"2025-07-02T15:12:11.595+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]","context":""}
{"timestamp":"2025-07-02T15:12:11.595+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]","context":""}
{"timestamp":"2025-07-02T15:12:11.596+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"Starting...","context":""}
{"timestamp":"2025-07-02T15:12:11.596+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@7cd2191b]","context":""}
{"timestamp":"2025-07-02T15:12:11.596+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"brokerChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@7cd2191b]","context":""}
{"timestamp":"2025-07-02T15:12:11.596+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@7cd2191b]]","context":""}
{"timestamp":"2025-07-02T15:12:11.597+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler","message":"Started.","context":""}
{"timestamp":"2025-07-02T15:12:11.597+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]","context":""}
{"timestamp":"2025-07-02T15:12:11.597+0700","level":"DEBUG","thread":"restartedMain","logger":"org.springframework.messaging.support.ExecutorSubscribableChannel","message":"brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]","context":""}
{"timestamp":"2025-07-02T15:12:11.600+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat started on port 8080 (http) with context path '/'","context":""}
{"timestamp":"2025-07-02T15:12:11.614+0700","level":"INFO","thread":"restartedMain","logger":"com.oss.socialmedia.SocialmediaApplication","message":"Started SocialmediaApplication in 2.286 seconds (process running for 189.65)","context":""}
{"timestamp":"2025-07-02T15:12:11.619+0700","level":"INFO","thread":"restartedMain","logger":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","message":"Condition evaluation unchanged","context":""}
{"timestamp":"2025-07-02T15:12:25.346+0700","level":"INFO","thread":"http-nio-8080-exec-2","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","context":""}
{"timestamp":"2025-07-02T15:12:25.346+0700","level":"INFO","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Initializing Servlet 'dispatcherServlet'","context":""}
{"timestamp":"2025-07-02T15:12:25.346+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected StandardServletMultipartResolver","context":""}
{"timestamp":"2025-07-02T15:12:25.346+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected AcceptHeaderLocaleResolver","context":""}
{"timestamp":"2025-07-02T15:12:25.347+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected FixedThemeResolver","context":""}
{"timestamp":"2025-07-02T15:12:25.348+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1a057d0","context":""}
{"timestamp":"2025-07-02T15:12:25.349+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Detected org.springframework.web.servlet.support.SessionFlashMapManager@f67a994","context":""}
{"timestamp":"2025-07-02T15:12:25.350+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data","context":""}
{"timestamp":"2025-07-02T15:12:25.350+0700","level":"INFO","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Completed initialization in 4 ms","context":""}
{"timestamp":"2025-07-02T15:12:25.355+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"POST \"/api/v1/auth/register\", parameters={}","context":""}
{"timestamp":"2025-07-02T15:12:25.356+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"Mapped to com.oss.socialmedia.controller.AuthController#register(ReqCreationUserDTO)","context":""}
{"timestamp":"2025-07-02T15:12:25.369+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","message":"Read \"application/json;charset=UTF-8\" to [ReqCreationUserDTO(lastName=Thong, firstName=Ho, username=ThongHo, dob=2025-03-01T07:31:39.644Z, ema (truncated)...]","context":""}
{"timestamp":"2025-07-02T15:12:25.427+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"Using @ExceptionHandler com.oss.socialmedia.exception.GlobalException#handleIdInvalidException(IdInvalidException, WebRequest)","context":""}
{"timestamp":"2025-07-02T15:12:25.432+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","context":""}
{"timestamp":"2025-07-02T15:12:25.433+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Writing [com.oss.socialmedia.controller.response.ResErrorDTO@32fce22c]","context":""}
{"timestamp":"2025-07-02T15:12:25.437+0700","level":"WARN","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"Resolved [com.oss.socialmedia.exception.IdInvalidException: Email admin04@gmail.comđã tồn tại, vui lòng sử dụng email khác.]","context":""}
{"timestamp":"2025-07-02T15:12:25.437+0700","level":"DEBUG","thread":"http-nio-8080-exec-2","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Completed 404 NOT_FOUND","context":""}
{"timestamp":"2025-07-02T15:12:33.656+0700","level":"DEBUG","thread":"http-nio-8080-exec-3","logger":"org.springframework.web.servlet.DispatcherServlet","message":"POST \"/api/v1/auth/register\", parameters={}","context":""}
{"timestamp":"2025-07-02T15:12:33.656+0700","level":"DEBUG","thread":"http-nio-8080-exec-3","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"Mapped to com.oss.socialmedia.controller.AuthController#register(ReqCreationUserDTO)","context":""}
{"timestamp":"2025-07-02T15:12:33.658+0700","level":"DEBUG","thread":"http-nio-8080-exec-3","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","message":"Read \"application/json;charset=UTF-8\" to [ReqCreationUserDTO(lastName=Thong, firstName=Ho, username=ThongHo, dob=2025-03-01T07:31:39.644Z, ema (truncated)...]","context":""}
{"timestamp":"2025-07-02T15:12:33.817+0700","level":"INFO","thread":"http-nio-8080-exec-3","logger":"USER-SERVICE","message":"Save register user: ReqCreationUserDTO(lastName=Thong, firstName=Ho, username=ThongHo, dob=2025-03-01T07:31:39.644Z, email=admin05@gmail.com, password=$2a$10$/e9pIRd8.CI1z7sotQ4rdukK1mp1bes/rMOAPeflmFu3RzNcF0tfW, phoneNumber=string, gender=MALE, status=ACTIVE, roles=[6858bf26164257fa90c49e92])","context":""}
{"timestamp":"2025-07-02T15:12:33.841+0700","level":"DEBUG","thread":"http-nio-8080-exec-3","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","context":""}
{"timestamp":"2025-07-02T15:12:33.841+0700","level":"DEBUG","thread":"http-nio-8080-exec-3","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Writing [com.oss.socialmedia.controller.response.UserDTO@4ea5a100]","context":""}
{"timestamp":"2025-07-02T15:12:33.844+0700","level":"DEBUG","thread":"http-nio-8080-exec-3","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Completed 201 CREATED","context":""}
{"timestamp":"2025-07-02T15:13:11.590+0700","level":"INFO","thread":"MessageBroker-1","logger":"org.springframework.web.socket.config.WebSocketMessageBrokerStats","message":"WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]","context":""}
{"timestamp":"2025-07-02T15:13:16.925+0700","level":"DEBUG","thread":"http-nio-8080-exec-4","logger":"org.springframework.web.servlet.DispatcherServlet","message":"POST \"/api/v1/auth/register\", parameters={}","context":""}
{"timestamp":"2025-07-02T15:13:16.925+0700","level":"DEBUG","thread":"http-nio-8080-exec-4","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"Mapped to com.oss.socialmedia.controller.AuthController#register(ReqCreationUserDTO)","context":""}
{"timestamp":"2025-07-02T15:13:16.927+0700","level":"DEBUG","thread":"http-nio-8080-exec-4","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","message":"Read \"application/json;charset=UTF-8\" to [ReqCreationUserDTO(lastName=Thong, firstName=Ho, username=ThongHo, dob=2025-03-01T07:31:39.644Z, ema (truncated)...]","context":""}
{"timestamp":"2025-07-02T15:13:17.079+0700","level":"INFO","thread":"http-nio-8080-exec-4","logger":"USER-SERVICE","message":"Save register user: ReqCreationUserDTO(lastName=Thong, firstName=Ho, username=ThongHo, dob=2025-03-01T07:31:39.644Z, email=admin@gmail.com, password=$2a$10$3o6ZgFRx7kW4c2NUDBwNmecAmNolvgvh4TkLBv1tHR2DzZxmzhXgi, phoneNumber=string, gender=MALE, status=ACTIVE, roles=[6858bf26164257fa90c49e92])","context":""}
{"timestamp":"2025-07-02T15:13:17.089+0700","level":"DEBUG","thread":"http-nio-8080-exec-4","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","context":""}
{"timestamp":"2025-07-02T15:13:17.090+0700","level":"DEBUG","thread":"http-nio-8080-exec-4","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Writing [com.oss.socialmedia.controller.response.UserDTO@1b4302b5]","context":""}
{"timestamp":"2025-07-02T15:13:17.091+0700","level":"DEBUG","thread":"http-nio-8080-exec-4","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Completed 201 CREATED","context":""}
{"timestamp":"2025-07-02T15:13:41.527+0700","level":"DEBUG","thread":"http-nio-8080-exec-5","logger":"org.springframework.web.servlet.DispatcherServlet","message":"POST \"/api/v1/auth/register\", parameters={}","context":""}
{"timestamp":"2025-07-02T15:13:41.528+0700","level":"DEBUG","thread":"http-nio-8080-exec-5","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"Mapped to com.oss.socialmedia.controller.AuthController#register(ReqCreationUserDTO)","context":""}
{"timestamp":"2025-07-02T15:13:41.530+0700","level":"DEBUG","thread":"http-nio-8080-exec-5","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","message":"Read \"application/json;charset=UTF-8\" to [ReqCreationUserDTO(lastName=Thong, firstName=Ho, username=ThongHo, dob=2025-03-01T07:31:39.644Z, ema (truncated)...]","context":""}
{"timestamp":"2025-07-02T15:13:41.711+0700","level":"INFO","thread":"http-nio-8080-exec-5","logger":"USER-SERVICE","message":"Save register user: ReqCreationUserDTO(lastName=Thong, firstName=Ho, username=ThongHo, dob=2025-03-01T07:31:39.644Z, email=user@gmail.com, password=$2a$10$bOn9zetzRvoHYWPmqGDNp.7N/hpftdWl0/FbfmviIlsNclVv5WwWK, phoneNumber=string, gender=MALE, status=ACTIVE, roles=[6858bf1b164257fa90c49e90])","context":""}
{"timestamp":"2025-07-02T15:13:41.772+0700","level":"DEBUG","thread":"http-nio-8080-exec-5","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","context":""}
{"timestamp":"2025-07-02T15:13:41.774+0700","level":"DEBUG","thread":"http-nio-8080-exec-5","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Writing [com.oss.socialmedia.controller.response.UserDTO@7d05b2cc]","context":""}
{"timestamp":"2025-07-02T15:13:41.777+0700","level":"DEBUG","thread":"http-nio-8080-exec-5","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Completed 201 CREATED","context":""}
{"timestamp":"2025-07-02T15:14:07.026+0700","level":"DEBUG","thread":"http-nio-8080-exec-6","logger":"org.springframework.web.servlet.DispatcherServlet","message":"POST \"/api/v1/auth/login\", parameters={}","context":""}
{"timestamp":"2025-07-02T15:14:07.027+0700","level":"DEBUG","thread":"http-nio-8080-exec-6","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"Mapped to com.oss.socialmedia.controller.AuthController#login(ReqLoginDTO)","context":""}
{"timestamp":"2025-07-02T15:14:07.030+0700","level":"DEBUG","thread":"http-nio-8080-exec-6","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","message":"Read \"application/json;charset=UTF-8\" to [com.oss.socialmedia.controller.request.ReqLoginDTO@741f28cf]","context":""}
{"timestamp":"2025-07-02T15:14:07.031+0700","level":"INFO","thread":"http-nio-8080-exec-6","logger":"AUTH-CONTROLLER","message":"LOGIN: com.oss.socialmedia.controller.request.ReqLoginDTO@741f28cf","context":""}
{"timestamp":"2025-07-02T15:14:07.477+0700","level":"DEBUG","thread":"http-nio-8080-exec-6","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","context":""}
{"timestamp":"2025-07-02T15:14:07.478+0700","level":"DEBUG","thread":"http-nio-8080-exec-6","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Writing [com.oss.socialmedia.controller.response.ResLoginDTO@3f1b3ece]","context":""}
{"timestamp":"2025-07-02T15:14:07.482+0700","level":"DEBUG","thread":"http-nio-8080-exec-6","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Completed 200 OK","context":""}
{"timestamp":"2025-07-02T15:14:25.792+0700","level":"DEBUG","thread":"http-nio-8080-exec-7","logger":"org.springframework.web.servlet.DispatcherServlet","message":"GET \"/api/v1/permissions\", parameters={}","context":""}
{"timestamp":"2025-07-02T15:14:25.793+0700","level":"DEBUG","thread":"http-nio-8080-exec-7","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"Mapped to com.oss.socialmedia.controller.PermissionController#getList(String, String, int, int)","context":""}
{"timestamp":"2025-07-02T15:14:25.868+0700","level":"DEBUG","thread":"http-nio-8080-exec-7","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","context":""}
{"timestamp":"2025-07-02T15:14:25.869+0700","level":"DEBUG","thread":"http-nio-8080-exec-7","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Writing [{Status=200, Message=Get all permissions successfully, Data=com.oss.socialmedia.controller.response. (truncated)...]","context":""}
{"timestamp":"2025-07-02T15:14:25.882+0700","level":"DEBUG","thread":"http-nio-8080-exec-7","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Completed 200 OK","context":""}
{"timestamp":"2025-07-02T15:14:37.531+0700","level":"DEBUG","thread":"http-nio-8080-exec-8","logger":"org.springframework.web.servlet.DispatcherServlet","message":"GET \"/api/v1/users\", parameters={}","context":""}
{"timestamp":"2025-07-02T15:14:37.532+0700","level":"DEBUG","thread":"http-nio-8080-exec-8","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"Mapped to com.oss.socialmedia.controller.UserController#getList(String, String, int, int)","context":""}
{"timestamp":"2025-07-02T15:14:37.543+0700","level":"DEBUG","thread":"http-nio-8080-exec-8","logger":"org.springframework.web.servlet.DispatcherServlet","message":"Failed to complete request: org.springframework.security.authorization.AuthorizationDeniedException: Access Denied","context":""}
{"timestamp":"2025-07-02T15:43:11.591+0700","level":"INFO","thread":"MessageBroker-1","logger":"org.springframework.web.socket.config.WebSocketMessageBrokerStats","message":"WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]","context":""}
